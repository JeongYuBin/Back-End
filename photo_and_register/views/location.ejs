<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Location Map</title>
    <script src="https://dapi.kakao.com/v2/maps/sdk.js?appkey=3585dfdc26eb8686b36cb652a1410094&libraries=services"></script>
    <style>
        #map {
            width: 100%;
            height: 500px;
            position: relative;
        }
        .buttons-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 20px 0;
        }
        .button-column {
            width: 100%;
            margin: 10px 0;
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }
        .button-column button {
            display: block;
            width: calc(33% - 20px);
            padding: 15px;
            font-size: 18px;
            border: 2px solid #007bff;
            border-radius: 5px;
            color: #007bff;
            background-color: #fff;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.3s, color 0.3s, border-color 0.3s;
            margin: 10px;
        }
        .button-column button:hover {
            background-color: #007bff;
            color: #fff;
            border-color: #0056b3;
            transform: scale(1.05);
        }
        .button-column button:active {
            background-color: #0056b3;
            color: #fff;
            border-color: #004494;
            transform: scale(0.95);
        }
        h1 {
            text-align: left;
            margin-left: 20px;
        }
        h2 {
            text-align: center;
            margin: 20px 0;
            font-size: 24px;
        }
        #placesList {
            list-style: none;
            padding: 0;
            margin: 0;
            max-height: 300px;
            overflow-y: auto;
        }
        #placesList li {
            margin-bottom: 10px;
            cursor: pointer;
        }
        .markerbg {
            background: url('https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png') no-repeat;
            width: 36px;
            height: 37px;
            display: inline-block;
            text-align: center;
            line-height: 37px;
            color: #fff;
            font-weight: bold;
            font-size: 14px;
        }
        .overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 300px;
            height: 300px;
            background: rgba(255, 255, 255, 0.9);
            border: 2px solid #ddd;
            overflow: auto;
            z-index: 10;
            padding: 10px;
        }
    </style>
</head>
<body>
    <h1>Location Map</h1>
    <div id="map">
        <div id="placesListContainer" class="overlay">
            <ul id="placesList"></ul>
        </div>
    </div>

    <!-- 검색된 장소의 상세 정보를 출력할 영역 -->
    <div id="detailContainer" style="max-height: 200px; overflow-y: auto; border: 1px solid #ddd; padding: 10px; margin-top: 20px;">
        <h3>Place Details</h3>
        <ul id="detailList" style="list-style-type: none; padding: 0;"></ul>
    </div>

    <div class="buttons-container">
        <h2>정렬 기준</h2>
        <div class="button-column">
            <select id="sortOptions">
                <option value="accuracy">정확도순</option>
                <option value="distance">거리순</option>
            </select>
        </div>
    </div>
    <div class="buttons-container">
        <h2>숙소 BEST</h2>
        <div class="button-column">
            <button id="accommodation">전체</button>
            <button id="accommodation1">호텔</button>
            <button id="accommodation2">모텔</button>
            <button id="accommodation3">펜션</button>
            <button id="accommodation4">리조트</button>
            <button id="accommodation5">캠핑</button>
            <button id="accommodation6">게스트하우스</button>
        </div>
    </div>
    <div class="buttons-container">
        <h2>맛집 BEST</h2>
        <div class="button-column">
            <button id="restaurant">전체</button>
            <button id="cafe">카페</button>
            <button id="restaurant1">한식</button>
            <button id="restaurant2">양식</button>
            <button id="restaurant3">일식</button>
            <button id="restaurant4">중식</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var mapContainer = document.getElementById('map');
            var placesListContainer = document.getElementById('placesListContainer');
            var address = '<%= address %>'; // 서버에서 전달받은 주소
            var mapOptions = {
                center: new kakao.maps.LatLng(37.5665, 126.978), // 초기 위치 설정 (서울 시청)
                level: 3
            };
            var map = new kakao.maps.Map(mapContainer, mapOptions);
            var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });
            var places = new kakao.maps.services.Places();
            var geocoder = new kakao.maps.services.Geocoder();
            var markers = [];
            var centerLatLng;

            // 정렬 기준 선택 옵션을 가져옵니다.
            var sortOptions = document.getElementById('sortOptions');

            // 상세 정보를 출력하는 함수
            function displayPlaceDetails(details) {
                var detailList = document.getElementById('detailList');
                detailList.innerHTML = ''; // 기존 내용을 제거

                details.forEach(function(detail) {
                    var detailItem = document.createElement('li');
                    detailItem.innerHTML = `
                        <strong>${detail.name}</strong><br>
                        주소: ${detail.address}<br>
                        전화번호: ${detail.phone ? detail.phone : '없음'}
                    `;
                    detailList.appendChild(detailItem);
                });
            }

            // 주소로 위치를 검색하여 지도 중앙에 설정합니다.
            geocoder.addressSearch(address, function(result, status) {
                if (status === kakao.maps.services.Status.OK) {
                    centerLatLng = new kakao.maps.LatLng(result[0].y, result[0].x);
                    map.setCenter(centerLatLng);

                    var marker = new kakao.maps.Marker({
                        map: map,
                        position: centerLatLng
                    });

                    // 각 버튼에 이벤트 리스너 추가
                    document.getElementById('accommodation').addEventListener('click', function() {
                        searchPlaces('AD5'); // 숙소 전체 카테고리 코드
                    });
                    document.getElementById('accommodation1').addEventListener('click', function() {
                        searchPlacesByKeyword('호텔'); // 호텔 검색
                    });
                    document.getElementById('accommodation2').addEventListener('click', function() {
                        searchPlacesByKeyword('모텔'); // 모텔 검색
                    });
                    document.getElementById('accommodation3').addEventListener('click', function() {
                        searchPlacesByKeyword('펜션'); // 펜션 검색
                    });
                    document.getElementById('accommodation4').addEventListener('click', function() {
                        searchPlacesByKeyword('리조트'); // 리조트 검색
                    });
                    document.getElementById('accommodation5').addEventListener('click', function() {
                        searchPlacesByKeyword('캠핑'); // 캠핑 검색
                    });
                    document.getElementById('accommodation6').addEventListener('click', function() {
                        searchPlacesByKeyword('게스트하우스'); // 게스트하우스 검색
                    });
                    document.getElementById('restaurant').addEventListener('click', function() {
                        searchPlaces('FD6'); // 맛집 카테고리 코드
                    });
                    document.getElementById('cafe').addEventListener('click', function() {
                        searchPlacesByKeyword('카페'); // 카페 검색
                    });
                    document.getElementById('restaurant1').addEventListener('click', function() {
                        searchPlacesByKeyword('한식'); // 한식 검색
                    });
                    document.getElementById('restaurant2').addEventListener('click', function() {
                        searchPlacesByKeyword('양식'); // 양식 검색
                    });
                    document.getElementById('restaurant3').addEventListener('click', function() {
                        searchPlacesByKeyword('일식'); // 일식 검색
                    });
                    document.getElementById('restaurant4').addEventListener('click', function() {
                        searchPlacesByKeyword('중식'); // 중식 검색
                    });
                } else {
                    console.error('주소 검색 실패:', status);
                }
            });

            // 장소 검색 함수
            function searchPlaces(categoryCode) {
                var searchOptions = {
                    location: centerLatLng,
                    radius: 5000,
                    sort: sortOptions.value
                };
                places.categorySearch(categoryCode, function(data, status, pagination) {
                    if (status === kakao.maps.services.Status.OK) {
                        displayPlaces(data); // 장소 결과 표시
                    } else {
                        console.error('장소 검색 실패:', status);
                    }
                }, searchOptions);
            }

            // 키워드로 장소 검색 함수
            function searchPlacesByKeyword(keyword) {
                var searchOptions = {
                    location: centerLatLng,
                    radius: 5000,
                    sort: sortOptions.value
                };
                places.keywordSearch(keyword, function(data, status, pagination) {
                    if (status === kakao.maps.services.Status.OK) {
                        var placeDetails = data.map(function(place) {
                            return {
                                name: place.place_name,
                                address: place.road_address_name || place.address_name,
                                phone: place.phone
                            };
                        });
                        displayPlaces(data); // 결과 표시
                        displayPlaceDetails(placeDetails); // 상세 정보 표시
                    } else {
                        console.error('키워드 검색 실패:', status);
                    }
                }, searchOptions);
            }

            // 검색 결과를 화면에 표시하는 함수
            function displayPlaces(places) {
                var listEl = document.getElementById('placesList');
                listEl.innerHTML = ''; // 기존 내용을 제거
                removeMarkers(); // 기존 마커 제거

                for (var i = 0; i < places.length; i++) {
                    var place = places[i];
                    var markerPosition = new kakao.maps.LatLng(place.y, place.x);
                    var marker = new kakao.maps.Marker({
                        position: markerPosition,
                        map: map
                    });
                    markers.push(marker);
                    var itemEl = document.createElement('li');
                    itemEl.innerHTML = place.place_name;
                    listEl.appendChild(itemEl);

                    // 마커 클릭 시 인포윈도우 표시
                    (function(marker, place) {
                        kakao.maps.event.addListener(marker, 'click', function() {
                            infowindow.setContent('<div style="padding:5px;font-size:12px;">' + place.place_name + '</div>');
                            infowindow.open(map, marker);
                        });
                    })(marker, place);
                }
            }

            // 기존 마커를 모두 제거하는 함수
            function removeMarkers() {
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
                markers = [];
            }
        });
    </script>
</body>
</html>
