<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Location Map</title>
    <script src="https://dapi.kakao.com/v2/maps/sdk.js?appkey=3585dfdc26eb8686b36cb652a1410094&libraries=services"></script>
    <style>
        #map {
            width: 100%;
            height: 500px;
            position: relative;
        }
        .buttons-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 20px 0;
        }
        .button-column {
            width: 100%;
            margin: 10px 0;
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }
        .button-column button {
            display: block;
            width: calc(33% - 20px);
            padding: 15px;
            font-size: 18px;
            border: 2px solid #007bff;
            border-radius: 5px;
            color: #007bff;
            background-color: #fff;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.3s, color 0.3s, border-color 0.3s;
            margin: 10px;
        }
        .button-column button:hover {
            background-color: #007bff;
            color: #fff;
            border-color: #0056b3;
            transform: scale(1.05);
        }
        .button-column button:active {
            background-color: #0056b3;
            color: #fff;
            border-color: #004494;
            transform: scale(0.95);
        }
        h1 {
            text-align: left;
            margin-left: 20px;
        }
        h2 {
            text-align: center;
            margin: 20px 0;
            font-size: 24px;
        }
        #placesList {
            list-style: none;
            padding: 0;
            margin: 0;
            max-height: 300px;
            overflow-y: auto;
        }
        #placesList li {
            margin-bottom: 10px;
            cursor: pointer;
        }
        .markerbg {
            background: url('https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png') no-repeat;
            width: 36px;
            height: 37px;
            display: inline-block;
            text-align: center;
            line-height: 37px;
            color: #fff;
            font-weight: bold;
            font-size: 14px;
        }
        .overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 300px;
            height: 300px;
            background: rgba(255, 255, 255, 0.9);
            border: 2px solid #ddd;
            overflow: auto;
            z-index: 10;
            padding: 10px;
        }
    </style>
</head>
<body>
    <h1>Location Map</h1>
    <div id="map">
        <div id="placesListContainer" class="overlay">
            <ul id="placesList"></ul>
        </div>
    </div>
    <div class="buttons-container">
        <h2>숙소 BEST</h2>
        <div class="button-column">
            <button id="accommodation">전체</button>
            <button id="accommodation1">호텔</button>
            <button id="accommodation2">모텔</button>
            <button id="accommodation3">펜션</button>
            <button id="accommodation4">리조트</button>
            <button id="accommodation5">캠핑</button>
            <button id="accommodation6">게스트하우스</button>
        </div>
    </div>
    <div class="buttons-container">
        <h2>맛집 BEST</h2>
        <div class="button-column">
            <button id="restaurant">전체</button>
            <button id="cafe">카페</button>
            <button id="restaurant1">한식</button>
            <button id="restaurant2">양식</button>
            <button id="restaurant3">일식</button>
            <button id="restaurant4">중식</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var mapContainer = document.getElementById('map');
            var placesListContainer = document.getElementById('placesListContainer');
            var params = new URLSearchParams(window.location.search);
            var address = params.get('address'); // 서버에서 전달받은 주소
            var latitude = parseFloat(params.get('latitude')); // 서버에서 전달받은 위도
            var longitude = parseFloat(params.get('longitude')); // 서버에서 전달받은 경도

            var mapOptions = {
                center: new kakao.maps.LatLng(latitude || 37.5665, longitude || 126.978), // 위도와 경도를 기반으로 지도 중앙 설정
                level: 3
            };
            var map = new kakao.maps.Map(mapContainer, mapOptions);
            var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });
            var places = new kakao.maps.services.Places();
            var geocoder = new kakao.maps.services.Geocoder();
            var markers = [];
            var centerLatLng;

            // 주소로 위치를 검색하여 지도 중앙에 설정합니다.
            geocoder.addressSearch(address, function(result, status) {
                if (status === kakao.maps.services.Status.OK) {
                    centerLatLng = new kakao.maps.LatLng(result[0].y, result[0].x);
                    map.setCenter(centerLatLng);
                    var marker = new kakao.maps.Marker({
                        map: map,
                        position: centerLatLng
                    });

                    // 각 버튼에 이벤트 리스너 추가
                    document.getElementById('accommodation').addEventListener('click', function() {
                        console.log('숙소 전체 버튼 클릭됨');
                        searchPlaces('AD5'); // 숙소 전체 카테고리 코드
                    });
                    document.getElementById('accommodation1').addEventListener('click', function() {
                        console.log('호텔 버튼 클릭됨');
                        searchPlacesByKeyword('호텔'); // 키워드 검색
                    });
                    document.getElementById('accommodation2').addEventListener('click', function() {
                        console.log('모텔 버튼 클릭됨');
                        searchPlacesByKeyword('모텔'); // 키워드 검색
                    });
                    document.getElementById('accommodation3').addEventListener('click', function() {
                        console.log('펜션 버튼 클릭됨');
                        searchPlacesByKeyword('펜션'); // 키워드 검색
                    });
                    document.getElementById('accommodation4').addEventListener('click', function() {
                        console.log('리조트 버튼 클릭됨');
                        searchPlacesByKeyword('리조트'); // 키워드 검색
                    });
                    document.getElementById('accommodation5').addEventListener('click', function() {
                        console.log('캠핑 버튼 클릭됨');
                        searchPlacesByKeyword('캠핑'); // 키워드 검색
                    });
                    document.getElementById('accommodation6').addEventListener('click', function() {
                        console.log('게스트하우스 버튼 클릭됨');
                        searchPlacesByKeyword('게스트하우스'); // 키워드 검색
                    });
                    document.getElementById('restaurant').addEventListener('click', function() {
                        console.log('맛집 전체 버튼 클릭됨');
                        searchPlaces('FD6'); // 맛집 카테고리 코드
                    });
                    document.getElementById('cafe').addEventListener('click', function() {
                        console.log('카페 버튼 클릭됨');
                        searchPlaces('CE7'); // 카페 카테고리 코드
                    });
                    document.getElementById('restaurant1').addEventListener('click', function() {
                        console.log('한식 버튼 클릭됨');
                        searchPlacesByKeyword('한식'); // 키워드 검색
                    });
                    document.getElementById('restaurant2').addEventListener('click', function() {
                        console.log('양식 버튼 클릭됨');
                        searchPlacesByKeyword('양식'); // 키워드 검색
                    });
                    document.getElementById('restaurant3').addEventListener('click', function() {
                        console.log('일식 버튼 클릭됨');
                        searchPlacesByKeyword('일식'); // 키워드 검색
                    });
                    document.getElementById('restaurant4').addEventListener('click', function() {
                        console.log('중식 버튼 클릭됨');
                        searchPlacesByKeyword('중식'); // 키워드 검색
                    });

                } else {
                    console.error('주소 검색 실패:', status);
                }
            });

            //카테고리 검색(코드번호)
            function searchPlaces(categoryCode) {
                var radius = 1000; // 1km
                var searchOptions = {
                    location: centerLatLng, // 중심 좌표
                    radius: radius // 검색 반경
                };

                places.categorySearch(categoryCode, function(data, status, pagination) {
                    if (status === kakao.maps.services.Status.OK) {
                        displayPlaces(data); // 장소 결과 표시
                    } else {
                        console.error('장소 검색 실패:', status);
                    }
                }, searchOptions);
            }
            //키워드 검색
            function searchPlacesByKeyword(keyword) {
                var searchKeyword = address + ' ' + keyword; 
                console.log('키워드 검색:', searchKeyword);

                places.keywordSearch(searchKeyword, function(data, status, pagination) {
                    if (status === kakao.maps.services.Status.OK) {
                        displayPlaces(data); // 장소 결과 표시
                    } else {
                        console.error('키워드 검색 실패:', status);
                    }
                });
            }

            function displayPlaces(places) {
                var listEl = document.getElementById('placesList');
                var bounds = new kakao.maps.LatLngBounds();
                var fragment = document.createDocumentFragment();

                removeAllChildNods(listEl);
                removeMarker();

                for (var i = 0; i < places.length; i++) {
                    var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x);
                    var marker = addMarker(placePosition, i);
                    var itemEl = getListItem(i, places[i]);

                    bounds.extend(placePosition);

                    (function(marker, title) {
                        kakao.maps.event.addListener(marker, 'click', function() {
                            displayInfowindow(marker, title);
                        });

                        itemEl.onclick = function() {
                            map.setCenter(marker.getPosition());
                            displayInfowindow(marker, title);
                        };
                    })(marker, places[i].place_name);

                    fragment.appendChild(itemEl);
                }

                listEl.appendChild(fragment);
                map.setBounds(bounds);
            }

            function getListItem(index, place) {
                var el = document.createElement('li');
                el.innerHTML = '<span class="markerbg" style="background-position: 0 ' + (-46 * index) + 'px;">' + (index + 1) + '</span>' +
                                '<div class="info">' +
                                '   <h5>' + place.place_name + '</h5>' +
                                (place.road_address_name ? 
                                    '<span>' + place.road_address_name + '</span>' +
                                    '<span class="jibun gray">' + place.address_name + '</span>':
                                    '<span>' + place.address_name + '</span>') +
                                '   <span class="tel">' + place.phone + '</span>' +
                                '</div>';
                el.className = 'item';
                return el;
            }

            function addMarker(position, idx) {
                var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png',
                    imageSize = new kakao.maps.Size(36, 37),
                    imgOptions =  {
                        spriteSize : new kakao.maps.Size(36, 691),
                        spriteOrigin : new kakao.maps.Point(0, (idx * 46) + 10),
                        offset: new kakao.maps.Point(13, 37)
                    },
                    markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),
                    marker = new kakao.maps.Marker({
                        position: position,
                        image: markerImage 
                    });

                marker.setMap(map);
                markers.push(marker);
                return marker;
            }

            function removeMarker() {
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
                markers = [];
            }

            function removeAllChildNods(el) {   
                while (el.hasChildNodes()) {
                    el.removeChild(el.lastChild);
                }
            }

            function displayInfowindow(marker, title) {
                var content = '<div style="padding:5px;z-index:1;">' + title + '</div>';
                infowindow.setContent(content);
                infowindow.open(map, marker);
            }
        });
    </script>
</body>
</html>
